//
//  LoginPresenter.swift
//  VIPER
//
//  Created by Chris on 2018/4/13.
//  Copyright (c) 2018年 Chris. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class LoginPresenter {

    // MARK: - Private properties -

    private unowned var _view: LoginViewInterface
    private var _interactor: LoginInteractorInterface
    private var _wireframe: LoginWireframeInterface

    // MARK: - Lifecycle -

    init(wireframe: LoginWireframeInterface, view: LoginViewInterface, interactor: LoginInteractorInterface) {
        _wireframe = wireframe
        _view = view
        _interactor = interactor
    }
}

// MARK: - Extensions -

extension LoginPresenter: LoginPresenterInterface {
    
    func didSelectLoginAction(with email: String?, password: String?) {
        guard let _email = email, _email.count > 0,
              let _password = password,  _password.count > 0 else {
            _showLoginValidationError()
            return
        }
        
        _wireframe.showProgressHUD()
        _interactor.loginUser(with: _email, password: _password) { [weak self] (result) in
            self?._wireframe.hideProgressHUD()
            self?._handleLoginResult(result)
        }
    }
}

private extension LoginPresenter {
    
    func _handleLoginResult(_ result: Bool) {
        if result {
            _wireframe.navigate(to: .home)
        }else {
            _wireframe.showAlert( with: "login api error", message: "Error")
        }
    }
    
    func _showLoginValidationError() {
        _wireframe.showAlert(with: "Error", message: "name or password error")
    }
}
